Index: app/src/main/java/com/labs/jangkriek/carilahan/Lokasi.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/labs/jangkriek/carilahan/Lokasi.java	(revision 00a6e519159067d589fd76b51af46cd899fbe450)
+++ app/src/main/java/com/labs/jangkriek/carilahan/Lokasi.java	(date 1568256041062)
@@ -3,30 +3,17 @@
 import android.os.Parcel;
 import android.os.Parcelable;
 
+import com.mapbox.mapboxsdk.geometry.LatLng;
+
 public class Lokasi {
 
-    public static final String TABLE_NAME = "lokasi";
-
-    public static final String KOLOM_ID = "id";
-    public static final String KOLOM_NAMA = "nama";
-    public static final String KOLOM_LONGITUDE = "longitude";
-    public static final String KOLOM_LATITUDE= "latitude";
-    public static final String KOLOM_TIMEADD= "timeadd";
-
     private int id;
     private String nama;
     private Double longitude;
     private Double latitude;
-    private String timeAdd;
+    private int status;
+    private LatLng lokasi;
 
-    public static final String CREATE_TABLE =
-            "CREATE TABLE " + TABLE_NAME + "("
-            + KOLOM_ID +" INTEGER PRIMARY KEY AUTOINCREMENT,"
-            + KOLOM_NAMA +" TEXT,"
-            + KOLOM_LONGITUDE +" DOUBLE,"
-            + KOLOM_LATITUDE +" DOUBLE,"
-            + KOLOM_TIMEADD +" TEXT"
-            + ")";
 
     public Lokasi (){
 
@@ -39,20 +26,12 @@
         this.id = id;
     }
 
-    public String getTimeAdd() {
-        return timeAdd;
-    }
-
-    public void setTimeAdd(String timeAdd) {
-        this.timeAdd = timeAdd;
-    }
-
-    public Lokasi(int id, String nama, double longitude, double latitude, String timeAdd){
+    public Lokasi(int id, String nama, double longitude, double latitude, int status){
         this.id = id;
         this.nama = nama;
         this.longitude = longitude;
         this.latitude = latitude;
-        this.timeAdd = timeAdd;
+        this.status = status;
     }
 
     public String getNama() {
@@ -79,10 +58,20 @@
         this.latitude = latitude;
     }
 
-    private Lokasi(Parcel source) {
-        nama = source.readString();
-        longitude = source.readDouble();
-        latitude = source.readDouble();
+    public int getStatus() {
+        return status;
+    }
+
+    public void setStatus(int status) {
+        this.status = status;
     }
 
+    public LatLng getLokasi() {
+        LatLng a = new LatLng(this.latitude, this.longitude);
+        return a;
+    }
+
+    public void setLokasi(LatLng lokasi) {
+        this.lokasi = lokasi;
+    }
 }
\ No newline at end of file
Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- build.gradle	(revision 00a6e519159067d589fd76b51af46cd899fbe450)
+++ build.gradle	(date 1568169399276)
@@ -8,6 +8,7 @@
     }
     dependencies {
         classpath 'com.android.tools.build:gradle:3.4.1'
+        classpath 'com.google.gms:google-services:4.2.0'
 
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
Index: app/src/main/java/com/labs/jangkriek/carilahan/Adapter/LocationLahanAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/labs/jangkriek/carilahan/Adapter/LocationLahanAdapter.java	(revision 00a6e519159067d589fd76b51af46cd899fbe450)
+++ app/src/main/java/com/labs/jangkriek/carilahan/Adapter/LocationLahanAdapter.java	(date 1568256342005)
@@ -1,5 +1,6 @@
 package com.labs.jangkriek.carilahan.Adapter;
 
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
@@ -43,6 +44,7 @@
             @Override
             public void onClick(View view, int position) {
                 LatLng selectedLocationLatLng = locationList.get(position).getLocationCoordinates();
+                Log.e("a", locationList.get(position).getLocationCoordinates()+"");
                 CameraPosition newCameraPosition = new CameraPosition.Builder()
                         .target(selectedLocationLatLng)
                         .build();
Index: app/src/main/java/com/labs/jangkriek/carilahan/RecyclerViewOnMapActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/labs/jangkriek/carilahan/RecyclerViewOnMapActivity.java	(revision 00a6e519159067d589fd76b51af46cd899fbe450)
+++ app/src/main/java/com/labs/jangkriek/carilahan/RecyclerViewOnMapActivity.java	(date 1568265831052)
@@ -4,19 +4,13 @@
 import android.animation.TypeEvaluator;
 import android.animation.ValueAnimator;
 import android.annotation.SuppressLint;
-import android.content.ContentValues;
 import android.content.DialogInterface;
-import android.content.Intent;
-import android.database.Cursor;
-import android.database.sqlite.SQLiteDatabase;
-import android.database.sqlite.SQLiteOpenHelper;
 import android.graphics.Bitmap;
 import android.graphics.drawable.Drawable;
 import android.os.Bundle;
 import androidx.annotation.NonNull;
 import androidx.appcompat.app.AlertDialog;
 import androidx.appcompat.app.AppCompatActivity;
-import androidx.coordinatorlayout.widget.CoordinatorLayout;
 import androidx.core.content.res.ResourcesCompat;
 import androidx.recyclerview.widget.DefaultItemAnimator;
 import androidx.recyclerview.widget.LinearLayoutManager;
@@ -24,11 +18,10 @@
 import androidx.recyclerview.widget.RecyclerView;
 import androidx.recyclerview.widget.SnapHelper;
 
-import android.os.Parcelable;
 import android.text.TextUtils;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
-import android.widget.Button;
 import android.widget.EditText;
 import android.widget.TextView;
 import android.widget.Toast;
@@ -71,16 +64,14 @@
     private static final String LAYER_ID = "LAYER_ID";
     public MapboxMap mapboxMap;
     private MapView mapView;
-    private FeatureCollection featureCollection;
-    DbHelper dbHelper;
-    SQLiteDatabase database;
-    private FloatingActionButton fabOpAddLocation, showArea, showMarker;
+    private FeatureCollection lokasiCollection;
+    private FloatingActionButton fabOpAddLocation;
 
     private LokasiAdapter mAdapter;
+
     private List<Lokasi> lokasiList = new ArrayList<>();
-    private CoordinatorLayout coordinatorLayout;
+
     private RecyclerView recyclerView;
-    private TextView noNotesView;
 
     private DbHelper db;
 
@@ -90,29 +81,17 @@
     private TextView tvLatitudeLokasi,tvLongitudeLokasi;
     private Style style;
 
-    private LatLng[] coordinates = new LatLng[] {
-            new LatLng(-7.915380, 110.108809),
-            new LatLng(-7.912170, 110.118133),
-            new LatLng(-7.902062, 110.099521),
-            new LatLng(-7.902701, 110.108192),
-            new LatLng(-7.915309, 110.095919),
-            new LatLng(-7.898089, 110.119733),
-            new LatLng(-7.894720, 110.117703)
-    };
+    private String lat, longi;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
 
-        // Mapbox access token is configured here. This needs to be called either in your application
-        // object or in the same activity which contains the mapview.
         Mapbox.getInstance(this, getString(R.string.access_token));
 
-        // This contains the MapView in XML and needs to be called after the access token is configured.
         setContentView(R.layout.activity_recycler_view_on_map);
         fabOpAddLocation = findViewById(R.id.op_add_location);
 
-        // Initialize the map view
         mapView = findViewById(R.id.mapView);
         mapView.onCreate(savedInstanceState);
         mapView.getMapAsync(this);
@@ -124,37 +103,16 @@
             @Override
             public void onClick(View v) {
                 showNoteDialog(false, null, -1);
+
             }
         });
 
-        //coordinatorLayout = findViewById(R.id.coordinator_layout);
-        recyclerView = findViewById(R.id.rv_list_lokasi);
-        //noNotesView = findViewById(R.id.empty_notes_view);
         db = new DbHelper(this);
 
         lokasiList.addAll(db.getAllLokasi());
 
-        mAdapter = new LokasiAdapter(this, lokasiList);
-        recyclerView.setLayoutManager(new LinearLayoutManager(getApplicationContext(), LinearLayoutManager.HORIZONTAL, false));
-        recyclerView.setItemAnimator(new ScaleInAnimator());
-        recyclerView.setAdapter(mAdapter);
-        SnapHelper snapHelper = new LinearSnapHelper();
-        //snapHelper.attachToRecyclerView(recyclerView);
-
         toggleEmptyNotes();
 
-        recyclerView.addOnItemTouchListener(new RecyclerTouchListener(this,
-                recyclerView, new RecyclerTouchListener.ClickListener() {
-            @Override
-            public void onClick(View view, final int position) {
-            }
-
-            @Override
-            public void onLongClick(View view, int position) {
-                showActionsDialog(position);
-            }
-        }));
-
     }
 
     @Override
@@ -166,56 +124,24 @@
         mapboxMap.setStyle(new Style.Builder().fromUri("mapbox://styles/ridwanharts/cjytgnl6o073w1cnv460nfx46"), new Style.OnStyleLoaded() {
             @Override
             public void onStyleLoaded(@NonNull Style style) {
-                initFeatureCollection();
+                initDataLokasiCollection();
                 initMarkerIcons(style);
-                //initRecyclerView();
-                //Toast.makeText(RecyclerViewOnMapActivity.this, R.string.toast_instruction, Toast.LENGTH_SHORT).show();
-                Drawable drawable = ResourcesCompat.getDrawable(getResources(), R.drawable.ic_place, null);
-                Bitmap bitmap = BitmapUtils.getBitmapFromDrawable(drawable);
+                initRecyclerviewLatlong();
+                showRedMarker(style);
+
+
+            }
+        });
+    }
+
+    private void initMarkerIcons(@NonNull Style loadedMapStyle) {
+
+        Drawable drawable = ResourcesCompat.getDrawable(getResources(), R.drawable.ic_place, null);
+        Bitmap bitmap = BitmapUtils.getBitmapFromDrawable(drawable);
 
-                style.addImage(("marker_icon"), bitmap);
-                style.addSource(geoJsonSource);
-                style.addLayer(new SymbolLayer("layer-id", "source-id")
-                        .withProperties(
-                                iconImage("marker_icon"),
-                                PropertyFactory.iconIgnorePlacement(true),
-                                iconAllowOverlap(true)
-                        ));
-
-                mapboxMap.addOnMapClickListener(RecyclerViewOnMapActivity.this);
-                RecyclerViewOnMapActivity.this.style = style;
-            }
-        });
-    }
-
-    private void initFeatureCollection() {
-        featureCollection = FeatureCollection.fromFeatures(new Feature[] {});
-        List<Feature> featureList = new ArrayList<>();
-        if (featureCollection != null) {
-            for (LatLng latLng : coordinates) {
-                featureList.add(Feature.fromGeometry(Point.fromLngLat(latLng.getLongitude(), latLng.getLatitude())));
-            }
-            featureCollection = FeatureCollection.fromFeatures(featureList);
-        }
-    }
-
-    private void initRecyclerView() {
-        RecyclerView recyclerView1 = findViewById(R.id.rv_on_top_of_map);
-        LocationLahanAdapter locationAdapter = new LocationLahanAdapter(titikLokasiLahanKosong(), mapboxMap);
-        recyclerView1.setLayoutManager(new LinearLayoutManager(getApplicationContext(), LinearLayoutManager.HORIZONTAL, true));
-        recyclerView1.setItemAnimator(new DefaultItemAnimator());
-        recyclerView1.setAdapter(locationAdapter);
-        SnapHelper snapHelper = new LinearSnapHelper();
-        snapHelper.attachToRecyclerView(recyclerView1);
-    }
-
-    private void initMarkerIcons(@NonNull Style loadedMapStyle) {
-
-        Drawable drawable = ResourcesCompat.getDrawable(getResources(), R.drawable.ic_local_airport, null);
-        Bitmap bitmap = BitmapUtils.getBitmapFromDrawable(drawable);
-
         loadedMapStyle.addImage(SYMBOL_ICON_ID, bitmap);
-        loadedMapStyle.addSource(new GeoJsonSource(SOURCE_ID, featureCollection));
+        //loadedMapStyle.addSource(new GeoJsonSource(SOURCE_ID, featureCollection));
+        loadedMapStyle.addSource(new GeoJsonSource(SOURCE_ID, lokasiCollection));
         loadedMapStyle.addLayer(new SymbolLayer(LAYER_ID, SOURCE_ID).withProperties(
                 iconImage(SYMBOL_ICON_ID),
                 iconAllowOverlap(true),
@@ -223,20 +149,6 @@
         ));
     }
 
-    //inisiasi array list untuk adapter
-    @SuppressLint("StringFormatInvalid")
-    private List<LocationLahan> titikLokasiLahanKosong() {
-        ArrayList<LocationLahan> locationList = new ArrayList<>();
-        for (int x = 0; x < coordinates.length; x++) {
-            LocationLahan mLocationLahan = new LocationLahan();
-            mLocationLahan.setName(String.format(getString(R.string.rv_card_name), x));
-            mLocationLahan.setBedInfo(String.format(getString(R.string.rv_card_bed_info), new Random().nextInt(coordinates.length)));
-            mLocationLahan.setLocationCoordinates(coordinates[x]);
-            locationList.add(mLocationLahan);
-        }
-        return locationList;
-    }
-
     private void showActionsDialog(final int position) {
         CharSequence colors[] = new CharSequence[]{"Edit", "Delete"};
 
@@ -255,12 +167,6 @@
         builder.show();
     }
 
-    /**
-     * Shows alert dialog with EditText options to enter / edit
-     * a note.
-     * when shouldUpdate=true, it automatically displays old note and changes the
-     * button text to UPDATE
-     */
     private void showNoteDialog(final boolean shouldUpdate, final Lokasi lokasi, final int position) {
         LayoutInflater layoutInflaterAndroid = LayoutInflater.from(getApplicationContext());
         View view = layoutInflaterAndroid.inflate(R.layout.dialog_lokasi, null);
@@ -309,16 +215,16 @@
                     updateLokasi(inputNote.getText().toString(), position);
                 } else {
                     // create new note
-                    createLokasi(inputNote.getText().toString());
+                    createLokasi(inputNote.getText().toString(), Double.parseDouble(lat), Double.parseDouble(longi), 1);
                 }
             }
         });
     }
 
-    private void createLokasi(String namaLokasi) {
+    private void createLokasi(String namaLokasi, double lat, double longi, int a) {
         // inserting note in db and getting
         // newly inserted note id
-        long id = db.insertLokasi(namaLokasi);
+        long id = db.insertLokasi(namaLokasi, lat, longi, a);
 
         // get the newly inserted note from db
         Lokasi n = db.getNote(id);
@@ -370,51 +276,6 @@
         }
     }
 
-    // Add the mapView lifecycle to the activity's lifecycle methods
-    @Override
-    public void onResume() {
-        super.onResume();
-        mapView.onResume();
-    }
-
-    @Override
-    protected void onStart() {
-        super.onStart();
-
-        mapView.onStart();
-    }
-
-    @Override
-    protected void onStop() {
-        super.onStop();
-        mapView.onStop();
-    }
-
-    @Override
-    public void onPause() {
-        super.onPause();
-
-        mapView.onPause();
-    }
-
-    @Override
-    public void onLowMemory() {
-        super.onLowMemory();
-        mapView.onLowMemory();
-    }
-
-    @Override
-    protected void onDestroy() {
-        super.onDestroy();
-        mapView.onDestroy();
-    }
-
-    @Override
-    protected void onSaveInstanceState(Bundle outState) {
-        super.onSaveInstanceState(outState);
-        mapView.onSaveInstanceState(outState);
-    }
-
     @Override
     public boolean onMapClick(@NonNull LatLng point) {
         if (!style.isFullyLoaded()) {
@@ -435,6 +296,8 @@
 
         tvLatitudeLokasi.setText(String.valueOf(currentPos.getLatitude()));
         tvLongitudeLokasi.setText(String.valueOf(currentPos.getLongitude()));
+        lat = tvLatitudeLokasi.getText().toString();
+        longi = tvLongitudeLokasi.getText().toString();
         return true;
     }
 
@@ -447,23 +310,6 @@
         void onClick(View view, int position);
     }
 
-    /*public ArrayList<LatLng> getLatLngList() {
-        dbHelper = new DbHelper(RecyclerViewOnMapActivity.this);
-        database = dbHelper.getWritableDatabase();
-        ArrayList<LatLng> latLngList = new ArrayList<>();
-        Cursor cursor = database.rawQuery("SELECT * FROM " + NewDatabaseForInRideData.IN_RIDE_LatLng, null);
-
-        cursor.moveToFirst();
-
-        while (!cursor.isAfterLast()){
-            latLngList.add(new LatLng(cursor.getDouble(cursor.getColumnIndex(NewDatabaseForInRideData.Latitude)),cursor.getDouble(cursor.getColumnIndex(NewDatabaseForInRideData.Latitude))));
-            cursor.moveToNext();
-        }
-
-        cursor.close();
-        return latLngList;
-    }*/
-
     private static final TypeEvaluator<LatLng> latLngEvaluator = new TypeEvaluator<LatLng>() {
 
         private final LatLng latLng = new LatLng();
@@ -487,4 +333,111 @@
                     geoJsonSource.setGeoJson(Point.fromLngLat(animatedPosition.getLongitude(), animatedPosition.getLatitude()));
                 }
             };
+
+    public void showRedMarker(Style styleRed){
+        Drawable drawable = ResourcesCompat.getDrawable(getResources(), R.drawable.ic_place, null);
+        Bitmap bitmap = BitmapUtils.getBitmapFromDrawable(drawable);
+
+        styleRed.addImage(("marker_icon"), bitmap);
+        styleRed.addSource(geoJsonSource);
+        styleRed.addLayer(new SymbolLayer("layer-id", "source-id")
+                .withProperties(
+                        iconImage("marker_icon"),
+                        PropertyFactory.iconIgnorePlacement(true),
+                        iconAllowOverlap(true)
+                ));
+
+        mapboxMap.addOnMapClickListener(RecyclerViewOnMapActivity.this);
+        RecyclerViewOnMapActivity.this.style = styleRed;
+    }
+
+    public void initRecyclerviewLatlong(){
+        recyclerView = findViewById(R.id.rv_list_lokasi);
+        mAdapter = new LokasiAdapter(this, lokasiList, mapboxMap);
+        recyclerView.setLayoutManager(new LinearLayoutManager(getApplicationContext(), LinearLayoutManager.HORIZONTAL, false));
+        recyclerView.setItemAnimator(new ScaleInAnimator());
+        recyclerView.setAdapter(mAdapter);
+        SnapHelper snapHelper = new LinearSnapHelper();
+        //snapHelper.attachToRecyclerView(recyclerView);
+
+        recyclerView.addOnItemTouchListener(new RecyclerTouchListener(this,
+                recyclerView, new RecyclerTouchListener.ClickListener() {
+            @Override
+            public void onClick(View view, final int position) {
+
+            }
+
+            @Override
+            public void onLongClick(View view, int position) {
+                showActionsDialog(position);
+            }
+        }));
+    }
+
+    private void initDataLokasiCollection() {
+
+
+        List<Lokasi> l = db.getLatLongLokasi();
+        LatLng[] lokasi = new LatLng[l.size()];
+
+        for(int i=0;i<l.size();i++) {
+            Log.e("cek", l.get(i).getLatitude() + ""+l.get(i).getLongitude());
+            lokasi[i] = new LatLng(l.get(i).getLatitude(),l.get(i).getLongitude());
+        }
+        Log.e("cek", ""+lokasi.length);
+
+        lokasiCollection = FeatureCollection.fromFeatures(new Feature[] {});
+        List<Feature> lokasiList = new ArrayList<>();
+        if (lokasiCollection != null) {
+            for (LatLng latLngLoc : lokasi) {
+                lokasiList.add(Feature.fromGeometry(Point.fromLngLat(latLngLoc.getLongitude(), latLngLoc.getLatitude())));
+            }
+            lokasiCollection = FeatureCollection.fromFeatures(lokasiList);
+        }
+    }
+
+    // Add the mapView lifecycle to the activity's lifecycle methods
+    @Override
+    public void onResume() {
+        super.onResume();
+        mapView.onResume();
+    }
+
+    @Override
+    protected void onStart() {
+        super.onStart();
+
+        mapView.onStart();
+    }
+
+    @Override
+    protected void onStop() {
+        super.onStop();
+        mapView.onStop();
+    }
+
+    @Override
+    public void onPause() {
+        super.onPause();
+
+        mapView.onPause();
+    }
+
+    @Override
+    public void onLowMemory() {
+        super.onLowMemory();
+        mapView.onLowMemory();
+    }
+
+    @Override
+    protected void onDestroy() {
+        super.onDestroy();
+        mapView.onDestroy();
+    }
+
+    @Override
+    protected void onSaveInstanceState(Bundle outState) {
+        super.onSaveInstanceState(outState);
+        mapView.onSaveInstanceState(outState);
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/labs/jangkriek/carilahan/LokasiAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/labs/jangkriek/carilahan/LokasiAdapter.java	(revision 00a6e519159067d589fd76b51af46cd899fbe450)
+++ app/src/main/java/com/labs/jangkriek/carilahan/LokasiAdapter.java	(date 1568257135625)
@@ -1,41 +1,62 @@
 package com.labs.jangkriek.carilahan;
 
 import android.content.Context;
-import android.text.Html;
+import android.util.Log;
 import android.view.LayoutInflater;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.TextView;
+import android.widget.Toast;
 
+import androidx.cardview.widget.CardView;
 import androidx.recyclerview.widget.RecyclerView;
 
-import java.text.ParseException;
-import java.text.SimpleDateFormat;
-import java.util.Date;
+import com.mapbox.mapboxsdk.camera.CameraPosition;
+import com.mapbox.mapboxsdk.camera.CameraUpdateFactory;
+import com.mapbox.mapboxsdk.geometry.LatLng;
+import com.mapbox.mapboxsdk.maps.MapboxMap;
+
 import java.util.List;
 
 public class LokasiAdapter extends RecyclerView.Adapter<LokasiAdapter.MyViewHolder> {
 
     private Context context;
-    private List<Lokasi> notesList;
+    private List<Lokasi> lokasiList;
+    private MapboxMap map;
 
-    public class MyViewHolder extends RecyclerView.ViewHolder {
+    public static class MyViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {
         public TextView namaLokasi;
-        public TextView dot;
-        public TextView timeAdd;
+        public TextView latitude;
+        public TextView longitude;
+        public TextView status;
+        CardView singleCard;
+        RecyclerViewOnMapActivity.ItemClickListener itemClickListener;
 
         public MyViewHolder(View view) {
             super(view);
-            namaLokasi = view.findViewById(R.id.nama_lokasi);
-            dot = view.findViewById(R.id.dot);
-            timeAdd = view.findViewById(R.id.time_add);
+            namaLokasi = view.findViewById(R.id.tv_nama_lokasi);
+            latitude = view.findViewById(R.id.tv_latitude);
+            longitude = view.findViewById(R.id.tv_longitude);
+            status = view.findViewById(R.id.tv_status);
+            singleCard = view.findViewById(R.id.cardview_lokasi);
+            singleCard.setOnClickListener(this);
+        }
+
+        public void setClickListener(RecyclerViewOnMapActivity.ItemClickListener itemClickListener) {
+            this.itemClickListener = itemClickListener;
+        }
+
+        @Override
+        public void onClick(View v) {
+            itemClickListener.onClick(v, getLayoutPosition());
         }
     }
 
 
-    public LokasiAdapter(Context context, List<Lokasi> notesList) {
+    public LokasiAdapter(Context context, List<Lokasi> lokasiList, MapboxMap mapBoxMap) {
         this.context = context;
-        this.notesList = notesList;
+        this.lokasiList = lokasiList;
+        this.map = mapBoxMap;
     }
 
     @Override
@@ -47,39 +68,32 @@
     }
 
     @Override
-    public void onBindViewHolder(MyViewHolder holder, int position) {
-        Lokasi namaLokasi = notesList.get(position);
+    public void onBindViewHolder(LokasiAdapter.MyViewHolder holder, int position) {
+        Lokasi namaLokasi = lokasiList.get(position);
 
         holder.namaLokasi.setText(namaLokasi.getNama());
-
-        // Displaying dot from HTML character code
-        holder.dot.setText(Html.fromHtml("&#8226;"));
-
-        // Formatting and displaying timestamp
-        holder.timeAdd.setText("cek");
+        holder.latitude.setText(String.valueOf(namaLokasi.getLatitude()));
+        holder.longitude.setText(String.valueOf(namaLokasi.getLongitude()));
+        holder.status.setText(String.valueOf(namaLokasi.getStatus()));
+        Log.e("b", lokasiList.get(position).getLokasi()+"");
+        holder.setClickListener(new RecyclerViewOnMapActivity.ItemClickListener() {
+            @Override
+            public void onClick(View view, int position) {
+                LatLng selectedLocationLatLng = lokasiList.get(position).getLokasi();
+                Toast.makeText(context,"cek : "+lokasiList.get(position).getLokasi(), Toast.LENGTH_SHORT).show();
+
+                CameraPosition newCameraPosition = new CameraPosition.Builder()
+                        .target(selectedLocationLatLng)
+                        .build();
+                map.easeCamera(CameraUpdateFactory.newCameraPosition(newCameraPosition));
+            }
+        });
+
     }
 
     @Override
     public int getItemCount() {
-        return notesList.size();
+        return lokasiList.size();
     }
-
-    /**
-     * Formatting timestamp to `MMM d` format
-     * Input: 2018-02-21 00:15:42
-     * Output: Feb 21
-     */
-    private String formatDate(String dateStr) {
-        try {
-            SimpleDateFormat fmt = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
-            Date date = fmt.parse(dateStr);
-            SimpleDateFormat fmtOut = new SimpleDateFormat("MMM d");
-            return fmtOut.format(date);
-        } catch (ParseException e) {
-            e.printStackTrace();
-
-        }
 
-        return "";
-    }
 }
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision 00a6e519159067d589fd76b51af46cd899fbe450)
+++ app/build.gradle	(date 1568178925988)
@@ -1,4 +1,5 @@
 apply plugin: 'com.android.application'
+apply plugin: 'com.google.gms.google-services'
 
 android {
     compileSdkVersion 28
@@ -28,6 +29,7 @@
     implementation 'androidx.appcompat:appcompat:1.0.2'
     implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
     implementation 'androidx.legacy:legacy-support-v4:1.0.0'
+    implementation 'com.google.firebase:firebase-database:16.0.4'
     testImplementation 'junit:junit:4.12'
     androidTestImplementation 'androidx.test:runner:1.2.0'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
@@ -43,4 +45,7 @@
 
     //fab
     implementation 'com.getbase:floatingactionbutton:1.10.1'
+
+    //
+    implementation 'com.android.volley:volley:1.1.0'
 }
Index: app/src/main/res/layout/dialog_lokasi.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/dialog_lokasi.xml	(revision 00a6e519159067d589fd76b51af46cd899fbe450)
+++ app/src/main/res/layout/dialog_lokasi.xml	(date 1568252765875)
@@ -18,16 +18,34 @@
 	android:textSize="16sp"
 	android:textStyle="normal" />
 
+  <TextView android:id="@+id/tvLatitude"
+	android:layout_width="wrap_content"
+	android:layout_height="wrap_content"
+	android:layout_marginBottom="10dp"
+	android:fontFamily="sans-serif-medium"
+	android:lineSpacingExtra="8sp"
+	android:text="Latitude"
+	android:textColor="@color/colorAccent"
+	android:textSize="16sp"
+	android:textStyle="normal" />
+
+  <TextView android:id="@+id/tvLongitude"
+	android:layout_width="wrap_content"
+	android:layout_height="wrap_content"
+	android:layout_marginBottom="10dp"
+	android:fontFamily="sans-serif-medium"
+	android:lineSpacingExtra="8sp"
+	android:text="Longitude"
+	android:textColor="@color/colorAccent"
+	android:textSize="16sp"
+	android:textStyle="normal" />
+
   <EditText
 	android:id="@+id/note"
 	android:layout_width="match_parent"
 	android:layout_height="wrap_content"
-	android:background="@android:color/transparent"
 	android:gravity="top"
 	android:hint="masukkan nama"
-	android:inputType="textCapSentences|textMultiLine"
-	android:lines="4"
-	android:textColorHint="@color/black_overlay"
-	android:textSize="14sp" />
+	android:textSize="16sp" />
 
 </LinearLayout>
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision 00a6e519159067d589fd76b51af46cd899fbe450)
+++ app/src/main/AndroidManifest.xml	(date 1568208044568)
@@ -1,11 +1,14 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
   xmlns:dist="http://schemas.android.com/apk/distribution"
+  xmlns:tools="http://schemas.android.com/tools"
   package="com.labs.jangkriek.carilahan">
 
   <dist:module dist:instant="true" />
 
   <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
+  <uses-permission android:name="android.permission.INTERNET" />
+  <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
 
   <application
 	android:allowBackup="true"
@@ -14,10 +17,13 @@
 	android:roundIcon="@mipmap/ic_launcher_round"
 	android:supportsRtl="true"
 	android:theme="@style/AppTheme">
+
+	<activity android:name=".Coba.CobaInput">
+
+	</activity>
 	<activity
 	  android:name=".InputNilaiKriteriaActivity"
-	  android:theme="@style/NoActionBar">
-	</activity>
+	  android:theme="@style/NoActionBar"></activity>
 	<activity android:name=".Input.AActivity" />
 	<activity android:name=".LoginActivity" />
 	<activity
@@ -35,6 +41,13 @@
 	<activity android:name=".RecyclerViewOnMapActivity" />
 	<activity android:name=".SymbolActivity" />
 	<activity android:name=".MainActivity" />
+
+	<receiver android:name=".Coba.NetworkStateChecker">
+	  <intent-filter>
+		<action android:name="android.net.conn.CONNECTIVITY_CHANGE"
+		  tools:ignore="BatteryLife" />
+	  </intent-filter>
+	</receiver>
   </application>
 
 </manifest>
\ No newline at end of file
Index: app/src/main/java/com/labs/jangkriek/carilahan/DbHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/labs/jangkriek/carilahan/DbHelper.java	(revision 00a6e519159067d589fd76b51af46cd899fbe450)
+++ app/src/main/java/com/labs/jangkriek/carilahan/DbHelper.java	(date 1568264486311)
@@ -5,6 +5,9 @@
 import android.database.Cursor;
 import android.database.sqlite.SQLiteDatabase;
 import android.database.sqlite.SQLiteOpenHelper;
+import android.util.Log;
+
+import com.mapbox.mapboxsdk.geometry.LatLng;
 
 import java.util.ArrayList;
 import java.util.List;
@@ -14,6 +17,12 @@
     private static final int DATABASE_VERSION = 1;
 
     private static final String DATABASE_NAME = "lokasi_db";
+    public static final String TABLE_NAME = "latlong";
+    public static final String KOLOM_ID = "id";
+    public static final String KOLOM_NAMA = "nama";
+    public static final String KOLOM_LONGITUDE = "longitude";
+    public static final String KOLOM_LATITUDE= "latitude";
+    public static final String KOLOM_STATUS= "timeadd";
 
     public DbHelper(Context context) {
         super(context, DATABASE_NAME, null, DATABASE_VERSION);
@@ -21,17 +30,24 @@
 
     @Override
     public void onCreate(SQLiteDatabase db) {
+        String sql = "CREATE TABLE " + TABLE_NAME + "("
+                        + KOLOM_ID +" INTEGER PRIMARY KEY AUTOINCREMENT,"
+                        + KOLOM_NAMA +" TEXT,"
+                        + KOLOM_LONGITUDE +" DOUBLE,"
+                        + KOLOM_LATITUDE +" DOUBLE,"
+                        + KOLOM_STATUS +" TINYINT"
+                        + ")";
 
-        db.execSQL(Lokasi.CREATE_TABLE);
+        db.execSQL(sql);
     }
 
     @Override
     public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
-        db.execSQL("DROP TABLE IF EXISTS " + Lokasi.TABLE_NAME);
+        db.execSQL("DROP TABLE IF EXISTS " + TABLE_NAME);
         onCreate(db);
     }
 
-    public long insertLokasi(String namaLokasi) {
+    public long insertLokasi(String namaLokasi, double lat, double longi, int a) {
         // get writable database as we want to write data
 
         SQLiteDatabase db = this.getWritableDatabase();
@@ -39,10 +55,13 @@
         ContentValues values = new ContentValues();
         // `id` and `timestamp` will be inserted automatically.
         // no need to add them
-        values.put(Lokasi.KOLOM_NAMA, namaLokasi);
+        values.put(KOLOM_NAMA, namaLokasi);
+        values.put(KOLOM_LATITUDE, lat);
+        values.put(KOLOM_LONGITUDE, longi);
+        values.put(KOLOM_STATUS, a);
 
         // insert row
-        long id = db.insert(Lokasi.TABLE_NAME, null, values);
+        long id = db.insert(TABLE_NAME, null, values);
 
         // close db connection
         db.close();
@@ -55,9 +74,9 @@
         // get readable database as we are not inserting anything
         SQLiteDatabase db = this.getReadableDatabase();
 
-        Cursor cursor = db.query(Lokasi.TABLE_NAME,
-                new String[]{Lokasi.KOLOM_ID, Lokasi.KOLOM_NAMA, Lokasi.KOLOM_LATITUDE, Lokasi.KOLOM_LONGITUDE, Lokasi.KOLOM_TIMEADD},
-                Lokasi.KOLOM_ID + "=?",
+        Cursor cursor = db.query(TABLE_NAME,
+                new String[]{KOLOM_ID, KOLOM_NAMA, KOLOM_LATITUDE, KOLOM_LONGITUDE, KOLOM_STATUS},
+                KOLOM_ID + "=?",
                 new String[]{String.valueOf(id)}, null, null, null, null);
 
         if (cursor != null)
@@ -65,11 +84,11 @@
 
         // prepare note object
         Lokasi note = new Lokasi(
-                cursor.getInt(cursor.getColumnIndex(Lokasi.KOLOM_ID)),
-                cursor.getString(cursor.getColumnIndex(Lokasi.KOLOM_NAMA)),
-                cursor.getDouble(cursor.getColumnIndex(Lokasi.KOLOM_LONGITUDE)),
-                cursor.getDouble(cursor.getColumnIndex(Lokasi.KOLOM_LATITUDE)),
-                cursor.getString(cursor.getColumnIndex(Lokasi.KOLOM_TIMEADD)));
+                cursor.getInt(cursor.getColumnIndex(KOLOM_ID)),
+                cursor.getString(cursor.getColumnIndex(KOLOM_NAMA)),
+                cursor.getDouble(cursor.getColumnIndex(KOLOM_LONGITUDE)),
+                cursor.getDouble(cursor.getColumnIndex(KOLOM_LATITUDE)),
+                cursor.getInt(cursor.getColumnIndex(KOLOM_STATUS)));
 
         // close the db connection
         cursor.close();
@@ -81,8 +100,8 @@
         List<Lokasi> notes = new ArrayList<>();
 
         // Select All Query
-        String selectQuery = "SELECT  * FROM " + Lokasi.TABLE_NAME + " ORDER BY " +
-                Lokasi.KOLOM_TIMEADD + " DESC";
+        String selectQuery = "SELECT  * FROM " + TABLE_NAME + " ORDER BY " +
+                KOLOM_STATUS + " DESC";
 
         SQLiteDatabase db = this.getWritableDatabase();
         Cursor cursor = db.rawQuery(selectQuery, null);
@@ -91,11 +110,11 @@
         if (cursor.moveToFirst()) {
             do {
                 Lokasi note = new Lokasi();
-                note.setId(cursor.getInt(cursor.getColumnIndex(Lokasi.KOLOM_ID)));
-                note.setNama(cursor.getString(cursor.getColumnIndex(Lokasi.KOLOM_NAMA)));
-                note.setLongitude(cursor.getDouble(cursor.getColumnIndex(Lokasi.KOLOM_LONGITUDE)));
-                note.setLatitude(cursor.getDouble(cursor.getColumnIndex(Lokasi.KOLOM_LATITUDE)));
-                note.setTimeAdd(cursor.getString(cursor.getColumnIndex(Lokasi.KOLOM_TIMEADD)));
+                note.setId(cursor.getInt(cursor.getColumnIndex(KOLOM_ID)));
+                note.setNama(cursor.getString(cursor.getColumnIndex(KOLOM_NAMA)));
+                note.setLongitude(cursor.getDouble(cursor.getColumnIndex(KOLOM_LONGITUDE)));
+                note.setLatitude(cursor.getDouble(cursor.getColumnIndex(KOLOM_LATITUDE)));
+                note.setStatus(cursor.getInt(cursor.getColumnIndex(KOLOM_STATUS)));
 
                 notes.add(note);
             } while (cursor.moveToNext());
@@ -109,7 +128,7 @@
     }
 
     public int getLokasiCount() {
-        String countQuery = "SELECT  * FROM " + Lokasi.TABLE_NAME;
+        String countQuery = "SELECT  * FROM " + TABLE_NAME;
         SQLiteDatabase db = this.getReadableDatabase();
         Cursor cursor = db.rawQuery(countQuery, null);
 
@@ -126,17 +145,41 @@
         SQLiteDatabase db = this.getWritableDatabase();
 
         ContentValues values = new ContentValues();
-        values.put(Lokasi.KOLOM_NAMA, lokasi.getNama());
+        values.put(KOLOM_NAMA, lokasi.getNama());
 
         // updating row
-        return db.update(Lokasi.TABLE_NAME, values, Lokasi.KOLOM_ID + " = ?",
+        return db.update(TABLE_NAME, values, KOLOM_ID + " = ?",
                 new String[]{String.valueOf(lokasi.getId())});
     }
 
     public void deleteLokasi(Lokasi lokasi) {
         SQLiteDatabase db = this.getWritableDatabase();
-        db.delete(Lokasi.TABLE_NAME,Lokasi.KOLOM_ID + " = ?",
+        db.delete(TABLE_NAME,KOLOM_ID + " = ?",
                 new String[]{String.valueOf(lokasi.getId())});
         db.close();
     }
+
+    public List<Lokasi> getLatLongLokasi() {
+        List<Lokasi> loc = new ArrayList<>();
+        // Select All Query
+        String selectQueryLat = "SELECT  * FROM " + TABLE_NAME;
+
+        SQLiteDatabase db = this.getWritableDatabase();
+        Cursor cursor = db.rawQuery(selectQueryLat, null);
+
+        // looping through all rows and adding to list
+        if (cursor.moveToFirst()) {
+            do {
+                Lokasi temp = new Lokasi();
+                temp.setLatitude(cursor.getDouble(cursor.getColumnIndex(KOLOM_LATITUDE)));
+                temp.setLongitude(cursor.getDouble(cursor.getColumnIndex(KOLOM_LONGITUDE)));
+                loc.add(temp);
+            } while (cursor.moveToNext());
+        }
+        // close db connection
+        db.close();
+
+        // return notes list
+        return loc;
+    }
 }
Index: app/src/main/res/layout/item_list_lokasi.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/item_list_lokasi.xml	(revision 00a6e519159067d589fd76b51af46cd899fbe450)
+++ app/src/main/res/layout/item_list_lokasi.xml	(date 1568256659499)
@@ -1,46 +1,124 @@
 <?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto"
+  android:layout_width="wrap_content"
+  android:layout_height="wrap_content"
+  android:layout_marginStart="4dp"
+  android:layout_marginEnd="4dp"
+  android:orientation="horizontal">
+
 <androidx.cardview.widget.CardView
-  xmlns:android="http://schemas.android.com/apk/res/android"
-  android:layout_width="200dp"
+  android:id="@+id/cardview_lokasi"
+  android:layout_width="250dp"
   android:layout_height="wrap_content"
-  android:id="@+id/single_location_cardview"
-  android:layout_marginEnd="8dp"
-  android:layout_marginLeft="8dp"
-  android:layout_marginRight="8dp"
-  android:layout_marginStart="8dp"
-  android:layout_marginTop="8dp">
+  android:layout_marginEnd="4dp"
+  android:clickable="true"
+  android:focusable="true"
+  android:foreground="?android:attr/selectableItemBackground"
+  app:cardCornerRadius="8dp"
+  app:cardElevation="8dp">
+
+  <RelativeLayout
+	android:layout_width="match_parent"
+	android:layout_height="wrap_content"
+	android:gravity="center_horizontal"
+	android:orientation="vertical">
+
+	<TextView
+	  android:id="@+id/tv_nama_lokasi"
+	  android:layout_width="match_parent"
+	  android:layout_height="wrap_content"
+	  android:layout_marginTop="8dp"
+	  android:gravity="center_horizontal"
+	  android:text="aaaaaaaaa"
+	  android:textAppearance="@style/TextAppearance.AppCompat.Medium" />
+
+	<LinearLayout
+	  android:layout_width="match_parent"
+	  android:layout_height="3dp"
+	  android:layout_marginTop="1dp"
+	  android:layout_below="@+id/tv_nama_lokasi"
+	  android:background="@color/colorPrimary">
+
+	</LinearLayout>
+
+	<LinearLayout
+	  android:layout_width="match_parent"
+	  android:layout_height="wrap_content"
+	  android:layout_below="@+id/tv_nama_lokasi"
+	  android:layout_marginStart="3dp"
+	  android:layout_marginEnd="3dp"
+	  android:layout_marginTop="8dp"
+	  android:weightSum="1"
+	  android:id="@+id/linear_ll"
+	  android:orientation="horizontal">
+
 
-  <LinearLayout
-	android:layout_width="match_parent"
-	android:layout_height="wrap_content"
-	android:gravity="center_horizontal"
-	android:orientation="vertical">
+	  <LinearLayout
+		android:layout_width="match_parent"
+		android:layout_height="wrap_content"
+		android:layout_weight="0.5"
+		android:orientation="vertical">
+
+		<TextView
+		  android:id="@+id/tv_title_lat"
+		  android:layout_width="wrap_content"
+		  android:layout_gravity="center_horizontal"
+		  android:layout_height="wrap_content"
+		  android:text="Latitude" />
+
+		<TextView
+		  android:id="@+id/tv_latitude"
+		  android:layout_width="match_parent"
+		  android:gravity="center_horizontal"
+		  android:layout_height="wrap_content"
+		  android:layout_marginTop="3dp"
+		  android:text="aaaaaaaaa" />
+
+	  </LinearLayout>
+
+	  <LinearLayout
+		android:layout_width="match_parent"
+		android:layout_height="wrap_content"
+		android:layout_weight="0.5"
+		android:orientation="vertical">
 
-	<TextView
-	  android:id="@+id/dot"
-	  android:layout_width="wrap_content"
-	  android:layout_height="5dp"
-	  android:layout_marginRight="3dp"
-	  android:layout_marginTop="10dp"
-	  android:includeFontPadding="false"
-	  android:layout_margin="8dp"
-	  android:textColor="@color/colorAccent"
-	  android:lineSpacingExtra="0dp"/>
+		<TextView
+		  android:id="@+id/tv_title_long"
+		  android:layout_width="wrap_content"
+		  android:layout_gravity="center_horizontal"
+		  android:layout_height="wrap_content"
+		  android:text="Longitude" />
 
-	<TextView
-	  android:id="@+id/time_add"
-	  android:layout_width="match_parent"
-	  android:layout_margin="8dp"
-	  android:layout_height="wrap_content"
-	  android:layout_toRightOf="@id/dot"/>
+		<TextView
+		  android:id="@+id/tv_longitude"
+		  android:layout_width="match_parent"
+		  android:gravity="center_horizontal"
+		  android:layout_height="wrap_content"
+		  android:layout_marginTop="3dp"
+		  android:text="aaaaaaaaa" />
 
-	<TextView
-	  android:id="@+id/nama_lokasi"
-	  android:layout_margin="8dp"
-	  android:layout_width="match_parent"
-	  android:layout_height="wrap_content"
-	  android:layout_below="@id/time_add"
-	  android:layout_toRightOf="@id/dot"/>
-  </LinearLayout>
+	  </LinearLayout>
+	</LinearLayout>
+
+	<LinearLayout
+	  android:layout_width="match_parent"
+	  android:layout_height="wrap_content"
+	  android:layout_marginTop="8dp"
+	  android:background="@color/colorPrimary"
+	  android:layout_below="@id/linear_ll">
+	  <TextView
+		android:id="@+id/tv_status"
+		android:gravity="center_horizontal"
+		android:layout_width="match_parent"
+		android:layout_height="wrap_content"
+		android:layout_marginStart="8dp"
+		android:textColor="@color/mapboxWhite"
+		android:layout_marginBottom="8dp"
+		android:text="aaaaaaaaa" />
+	</LinearLayout>
 
-</androidx.cardview.widget.CardView>
\ No newline at end of file
+  </RelativeLayout>
+
+</androidx.cardview.widget.CardView>
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/activity_recycler_view_on_map.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_recycler_view_on_map.xml	(revision 00a6e519159067d589fd76b51af46cd899fbe450)
+++ app/src/main/res/layout/activity_recycler_view_on_map.xml	(date 1568265831085)
@@ -66,26 +66,17 @@
 	  </LinearLayout>
 
 	</LinearLayout>
-	<androidx.recyclerview.widget.RecyclerView
-	  android:layout_below="@+id/linear_latlong"
-	  android:id="@+id/rv_on_top_of_map"
-	  android:layout_width="match_parent"
-	  android:layout_height="wrap_content"
-	  android:layout_marginTop="16dp" />
 
 	<androidx.recyclerview.widget.RecyclerView
 	  android:id="@+id/rv_list_lokasi"
 	  android:layout_width="match_parent"
 	  android:layout_height="wrap_content"
-	  android:layout_marginTop="10dp"
-	  android:orientation="horizontal"
-	  android:layout_below="@+id/rv_on_top_of_map"/>
+	  android:layout_marginTop="5dp"
+	  android:layout_below="@+id/linear_latlong"
+	  android:orientation="horizontal"/>
 
   </RelativeLayout>
 
-
-	android:layout_marginTop="16dp" />
-
   <com.getbase.floatingactionbutton.FloatingActionsMenu
 	android:id="@+id/menu_options_map"
 	android:layout_width="wrap_content"
@@ -118,7 +109,7 @@
 	  app:fab_title="Delete Point"/>
 
 	<com.getbase.floatingactionbutton.FloatingActionButton
-	  android:id="@+id/show_marker1"
+	  android:id="@+id/op_search_location"
 	  android:layout_width="wrap_content"
 	  android:layout_height="wrap_content"
 	  app:fab_colorNormal="@color/mapboxGreen"
Index: app/src/main/res/layout/item_list_latlong.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/item_list_latlong.xml	(date 1568253669558)
+++ app/src/main/res/layout/item_list_latlong.xml	(date 1568253669558)
@@ -0,0 +1,46 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+  xmlns:app="http://schemas.android.com/apk/res-auto"
+  android:layout_width="match_parent"
+  android:layout_height="wrap_content"
+  android:orientation="horizontal">
+
+  <androidx.cardview.widget.CardView
+	android:id="@+id/single_location_cardview"
+	android:layout_width="250dp"
+	android:layout_height="wrap_content"
+	android:layout_marginEnd="4dp"
+	android:clickable="true"
+	android:focusable="true"
+	android:foreground="?android:attr/selectableItemBackground"
+	app:cardCornerRadius="8dp"
+	app:cardElevation="10dp">
+
+	<LinearLayout
+	  android:layout_width="match_parent"
+	  android:layout_height="wrap_content"
+	  android:gravity="center_horizontal"
+	  android:orientation="vertical">
+
+	  <TextView
+		android:id="@+id/id_ll"
+		android:layout_width="match_parent"
+		android:layout_height="wrap_content"
+		android:layout_marginTop="8dp" />
+
+	  <TextView
+		android:id="@+id/latitude_ll"
+		android:layout_width="match_parent"
+		android:layout_height="wrap_content"
+		android:layout_marginTop="8dp"
+		android:layout_marginBottom="8dp" />
+
+	  <TextView
+		android:id="@+id/longitude_ll"
+		android:layout_width="match_parent"
+		android:layout_height="wrap_content"
+		android:layout_marginBottom="8dp" />
+	</LinearLayout>
+
+  </androidx.cardview.widget.CardView>
+</LinearLayout>
\ No newline at end of file
